# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven for PROD US-WEST-1

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: prodRunnerUsWest2

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Print AWS Region
        run: echo "Deploying to AWS Region ${{secrets.AWS_ACCESS_KEY}}"
      - name: Build with Maven
        run: mvn clean -B package --file pom.xml
      - name: Execute Jar File
        run: |
          sudo kill -9 `sudo lsof -t -i:80` &
          sudo java -jar /home/ubuntu/actions-runner/_work/payment-service/payment-service/target/payment-service-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod --aws.region=us-west-1 --aws.accessKey=${{secrets.AWS_ACCESS_KEY}} --aws.secretKey=${{secrets.AWS_SECRET_KEY}} &

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        with:
          token: ${{ secrets.DEPLOYMENT_PAT }}
